<!-- Modal  login   -->
<div class="modal fade" id="login" tabindex="-1" role="dialog" aria-labelledby="loginModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Se Connecter</h5>
            </div>

            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <label id="messageErrorAuth" class="text-danger"></label>
                    </div>
                </div>
                <div id='formLogin' class="row register-form">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Email :</label>
                            <div class="input-group-prepend">
                                <span class="input-group-text" >@</span>
                                <input type="email" id='formEmail' name="email" class="form-control" placeholder="Email"
                                    required />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Mot de passe :</label>
                            <div class="input-group-prepend">
                                <span class="input-group-text" ><i class="fas fa-lock"></i></span>
                                <input type="password" id='formPassword' name="password" class="form-control"
                                    placeholder="Password" required /><button class="unmasklogin" type="button"
                                    title="Mask/Unmask password to check content"><i class="fas fa-eye"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
                <a href="#" data-toggle="modal" data-target="#modalmdpOublié"> mot de passe oublié ?</a>
            </div>

            <div class="modal-footer">
                <button type="submit" class="btn btn-info" onclick="connexionModal()">Me connecter</button>

            </div>
        </div>
    </div>
</div>

{{!-- Modal mot de passe oublié --}}
<div class="modal fade" id="modalmdpOublié" tabindex="-1" role="dialog" aria-labelledby="modalmdpOublié"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">

                <h5 class="modal-title">Sasir l'adresse mail de votre compte </h5>
            </div>

            <div class="modal-body">

                <form action="/lostPassword" method="post" enctype="application/x-www-form-urlencoded">
                    <div class="modal-body">
                        <label>Email : </label>
                        <input type="email" class="form-control" name='email'>
                        <div class="modal-footer">
                            <div class="row">
                                <div class="col-md-6">
                                    <button type="button" class="btn btn-danger m-3"
                                        data-dismiss="modal">Annuler</button>
                                </div>
                                <div class="col-md-6">
                                    <button type="submit" class="btn btn-success m-3">Envoyer </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function connexionModal() {
        const formEmail = document.getElementById('formEmail').value
        const formPassword = document.getElementById('formPassword').value
        console.log("test");
        $.ajax({
            url: '/login',
            type: 'POST',
            data: { email: formEmail, password: formPassword },
            dataType: "json",
            success: function (json, statut) {

                console.log('error success sadazedea')
                console.log(json.message);

                $("#messageErrorAuth").text(json.message);
                if (json.noError) {
                    window.location.replace("/");
                }
            },
            error: function (json, resultat, statut, erreur) {
                console.log('erreur login modal')
                console.log(json)
                console.log(resultat);
                console.log(statut);
                console.log(erreur);
                if (!json.noError) {
                    // alert('Bonjour, Vous etes connecté !'
                    window.location.replace("/");
               }
            }
        });
    };

 //function décache mot de passe
    $('.unmasklogin').on('click', function () {

        if ($(this).prev('input').attr('type') == 'password')
            changeType($(this).prev('input'), 'text');

        else
            changeType($(this).prev('input'), 'password');

        return false;
    });

    // x = élément du DOM, type = nouveau type à attribuer
    function changeType(x, type) {
        if (x.prop('type') == type)
            return x; // ça serait facile.
        try {
            // Une sécurité d'IE empêche ceci
            return x.prop('type', type);
        }
        catch (e) {
            // On tente de recréer l'élément
            // En créant d'abord une div
            var html = $("<div>").append(x.clone()).html();
            var regex = /type=(\")?([^\"\s]+)(\")?/;
            // la regex trouve type=text ou type="text"
            // si on ne trouve rien, on ajoute le type à la fin, sinon on le remplace
            var tmp = $(html.match(regex) == null ?
                html.replace(">", ' type="' + type + '">') :
                html.replace(regex, 'type="' + type + '"'));

            // on rajoute les vieilles données de l'élément
            tmp.data('type', x.data('type'));
            var events = x.data('events');
            var cb = function (events) {
                return function () {
                    //Bind all prior events
                    for (i in events) {
                        var y = events[i];
                        for (j in y) tmp.bind(i, y[j].handler);
                    }
                }
            }(events);
            x.replaceWith(tmp);
            setTimeout(cb, 10); // On attend un peu avant d'appeler la fonction
            return tmp;
        }
    }




</script>